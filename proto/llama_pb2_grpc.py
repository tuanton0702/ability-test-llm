# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from proto import llama_pb2 as proto_dot_llama__pb2


class LlamaServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.FineTune = channel.unary_unary(
                '/llamaapi.LlamaService/FineTune',
                request_serializer=proto_dot_llama__pb2.FineTuneRequest.SerializeToString,
                response_deserializer=proto_dot_llama__pb2.FineTuneResponse.FromString,
                )
        self.Predict = channel.unary_unary(
                '/llamaapi.LlamaService/Predict',
                request_serializer=proto_dot_llama__pb2.PredictionRequest.SerializeToString,
                response_deserializer=proto_dot_llama__pb2.PredictionResponse.FromString,
                )
        self.UploadMultipleJsonFiles = channel.unary_unary(
                '/llamaapi.LlamaService/UploadMultipleJsonFiles',
                request_serializer=proto_dot_llama__pb2.MultipleJsonFiles.SerializeToString,
                response_deserializer=proto_dot_llama__pb2.UploadResponse.FromString,
                )


class LlamaServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def FineTune(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Predict(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UploadMultipleJsonFiles(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_LlamaServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'FineTune': grpc.unary_unary_rpc_method_handler(
                    servicer.FineTune,
                    request_deserializer=proto_dot_llama__pb2.FineTuneRequest.FromString,
                    response_serializer=proto_dot_llama__pb2.FineTuneResponse.SerializeToString,
            ),
            'Predict': grpc.unary_unary_rpc_method_handler(
                    servicer.Predict,
                    request_deserializer=proto_dot_llama__pb2.PredictionRequest.FromString,
                    response_serializer=proto_dot_llama__pb2.PredictionResponse.SerializeToString,
            ),
            'UploadMultipleJsonFiles': grpc.unary_unary_rpc_method_handler(
                    servicer.UploadMultipleJsonFiles,
                    request_deserializer=proto_dot_llama__pb2.MultipleJsonFiles.FromString,
                    response_serializer=proto_dot_llama__pb2.UploadResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'llamaapi.LlamaService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class LlamaService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def FineTune(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/llamaapi.LlamaService/FineTune',
            proto_dot_llama__pb2.FineTuneRequest.SerializeToString,
            proto_dot_llama__pb2.FineTuneResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Predict(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/llamaapi.LlamaService/Predict',
            proto_dot_llama__pb2.PredictionRequest.SerializeToString,
            proto_dot_llama__pb2.PredictionResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UploadMultipleJsonFiles(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/llamaapi.LlamaService/UploadMultipleJsonFiles',
            proto_dot_llama__pb2.MultipleJsonFiles.SerializeToString,
            proto_dot_llama__pb2.UploadResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
